{"version":3,"sources":["components/homePage.tsx","components/personRow.tsx","components/peopleTable.tsx","components/peoplePage.tsx","api.ts","App.tsx","index.tsx"],"names":["HomePage","className","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","slug","PeoplePage","useState","setPeople","useEffect","fetch","then","response","json","peopleFromServer","prepearingPeople","mother","find","father","App","navData","classNames","isActive","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"2OAAaA,EAAqB,kBAChC,oBAAIC,UAAU,QAAd,wB,8BCGK,IAAMC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxC,qBAAIF,UAAU,SAAd,UACE,6BAAKE,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,aACZ,6BAAKL,EAAOM,iBCLHC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAOV,UAAU,oBAAjB,UACE,kCACE,sCACA,qCACA,sCACA,sCACA,wCACA,2CAEF,gCAEIU,EAAOC,KAAI,SAAAT,GAAM,OACf,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOU,eChBtCC,EAAuB,WAClC,MAA4BC,mBAAoB,IAAhD,mBAAOJ,EAAP,KAAeK,EAAf,KAuBA,OArBAC,qBACE,WCJKC,MAHQ,qEAIZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDIbF,MAAK,SAAAG,GACf,IAAMC,EAAmB,YAAID,GAAkBV,KAAI,SAAAT,GACjD,OAAO,2BACFA,GADL,IAEEqB,OAAQF,EAAiBG,MACvB,SAACD,GAAD,OAAoBA,EAAOpB,OAASD,EAAOK,eACxC,KACLkB,OAAQJ,EAAiBG,MACvB,SAACC,GAAD,OAAoBA,EAAOtB,OAASD,EAAOM,eACxC,UAKTO,EAAUO,QAEX,IAIH,cAAC,EAAD,CAAaZ,OAAQA,KEqBVgB,EAvCH,kBACV,sBAAK1B,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CACEA,UAAW,SAAC2B,GAAD,OAAcC,IACvB,cACA,CACE,YAAaD,EAAQE,YAGzBC,GAAG,IAPL,uBAWA,cAAC,IAAD,CACE9B,UAAW,SAAC2B,GAAD,OAAcC,IACvB,cACA,CACE,YAAaD,EAAQE,YAGzBC,GAAG,UAPL,6BAcJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUF,GAAG,QACzC,cAAC,IAAD,CAAOC,KAAK,UAAUC,QAAS,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,wDCxC/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6e4cd085.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","type Props = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => (\n  <tr className=\"Person\">\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.motherName}</td>\n    <td>{person.fatherName}</td>\n  </tr>\n);\n","import { PersonRow } from './personRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"table is-bordered\">\n      <thead>\n        <th>name</th>\n        <th>sex</th>\n        <th>born</th>\n        <th>died</th>\n        <th>mother</th>\n        <th>father</th>\n      </thead>\n      <tbody>\n        {\n          people.map(person => (\n            <PersonRow person={person} key={person.slug} />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './peopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person []>([]);\n\n  useEffect(\n    () => {\n      getPeople().then(peopleFromServer => {\n        const prepearingPeople = [...peopleFromServer].map(person => {\n          return {\n            ...person,\n            mother: peopleFromServer.find(\n              (mother: Person) => mother.name === person.motherName,\n            ) || null,\n            father: peopleFromServer.find(\n              (father: Person) => father.name === person.fatherName,\n            ) || null,\n\n          };\n        });\n\n        setPeople(prepearingPeople);\n      });\n    }, [],\n  );\n\n  return (\n    <PeopleTable people={people} />\n  );\n};\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(BASE_URL)\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/homePage';\nimport { PeoplePage } from './components/peoplePage';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"navbar\">\n      <nav className=\"navbar-menu\">\n        <NavLink\n          className={(navData) => (classNames(\n            'navbar-item',\n            {\n              'is-active': navData.isActive,\n            },\n          ))}\n          to=\"/\"\n        >\n          Home page\n        </NavLink>\n        <NavLink\n          className={(navData) => (classNames(\n            'navbar-item',\n            {\n              'is-active': navData.isActive,\n            },\n          ))}\n          to=\"/people\"\n        >\n          Peope page\n        </NavLink>\n      </nav>\n    </header>\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n\n      <Route path=\"*\" element={<p>Page not found</p>} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}